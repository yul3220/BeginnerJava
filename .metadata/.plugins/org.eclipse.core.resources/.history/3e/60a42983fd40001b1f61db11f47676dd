package j_jdbc;

import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

import e_oop.ScanUtil;

public class JDBCBoard_util {
	Scanner sc = new Scanner(System.in);
	JDBCUtil jdbc = JDBCUtil.getInstance();
	Object boardNo = 0;
	public static void main(String[] args) {
		JDBCBoard_util boards = new JDBCBoard_util();
		boards.start();
	}

	private void start() {
		while(true){
			System.out.println();
			System.out.println("=========================================================");
			System.out.println("번호\t제목\t\t작성자\t작성일");
			System.out.println("=========================================================");
			String sql= "select * from  tb_jdbc_board order by board_no desc";
			List<Map<String, Object>> list = jdbc.selectList(sql);
			for(int i = 0; i< list.size();i++){
				Map<String, Object> map = list.get(i);

				System.out.println(map.get("BOARD_NO")+"\t"
						+map.get("TITLE")+"\t\t"
						+map.get("USER_ID")+"\t"
						+map.get("REG_DATE"));
			}
			System.out.println("=========================================================");
			System.out.println("1.조회\t2.등록\t3.종료");
			System.out.print("입력> ");
			int input = ScanUtil.nextInt();

			switch (input) {
			case 1:
				sign();
				break;
			case 2:
				signuser();
				break;
			case 3:
				System.exit(3);
				break;
			default:
				System.out.println("값을 잘못입력했습니다. 다시 입력해주세요.");
			}
		}
	}//start()

	private void sign() {
		System.out.print("조회하고 싶은 번호를 입력> ");
		int sign = Integer.parseInt(sc.nextLine());

		String sql = "select * from tb_jdbc_board where board_no = ?";
		List<Object> param = new ArrayList();
		param.add(sign);
		Map<String, Object> signmap = jdbc.selectOne(sql, param);

		System.out.println("게시판 번호 : "+signmap.get("BOARD_NO"));
		System.out.println("------------------------------------");
		System.out.println("작성자 : "+signmap.get("USER_ID"));
		System.out.println("작성 날짜 : "+signmap.get("REG_DATE"));
		System.out.println("-----------------------------------");
		System.out.println("제목 : "+signmap.get("TITLE"));
		System.out.println("내용 : "+signmap.get("CONTENT"));
		System.out.println("-----------------------------------");

		System.out.println();
		System.out.println("=-=-=-=-=-=-=-=-=-=-=-=-=-=-");
		System.out.println("1.수정\t2.삭제\t3.나가기");
		System.out.println("=-=-=-=-=-=-=-=-=-=-=-=-=-=-");
		System.out.print("원하는 항목의 번호를 입력 > ");
		int input = Integer.parseInt(sc.nextLine());
		switch(input){
		case 1:
			change();
			break;
		case 2:
			delete();
			break;
		case 3:
			break;
		default:
			System.out.println("값을 잘못입력했습니다. 다시 입력해주세요.");
		}
	}//sign()

	private void change() {
		System.out.print("바꾸고싶은 글의 번호를 입력> ");
		Object number = sc.nextLine();
		System.out.print("바꾸고 싶은 제목을 입력> ");
		String title = sc.nextLine();
		System.out.print("바꾸고 싶은 내용을 입력> ");
		String content = sc.nextLine();

		String sql = "update tb_jdbc_board set title=?,content = ? where board_no=?";
		List<Object> param = new ArrayList();
		param.add(title);
		param.add(content);
		param.add(number);
		
		int result = jdbc.update(sql, param);
		if(result>0){
			System.out.println("수정완료!!!");
		}
	}//change()
	
	private void delete() {
		System.out.print("삭제하고싶은 글의 번호를 입력> ");
		Object number = sc.nextLine();

		String sql = "delete tb_jdbc_board where board_no=?";
		List<Object> param = new ArrayList();
		param.add(number);
		
		int result = jdbc.update(sql, param);
		if(result>0){
			System.out.println("삭제완료!!!");
		}
	}//delete()

	private void signuser() {
		Object boardNo = createBoardNo();
		System.out.print("제목 > ");
		String title = sc.nextLine();
		System.out.print("내용> ");
		String content = sc.nextLine();
		System.out.print("작성자> ");
		String username = sc.nextLine();

		String sql = "insert into "
				+ "tb_jdbc_board(board_no, title, content, user_id, reg_date) "
				+ "values(?, ?, ?, ?, sysdate)";
		List<Object> param = new ArrayList();
		param.add(boardNo);
		param.add(title);
		param.add(content);
		param.add(username);
		int result = jdbc.update(sql, param);
		if(result>0){
			System.out.println("등록완료");
		}
	}//signuser()

	Object createBoardNo() {
		String sql = "SELECT NVL(MAX(BOARD_NO), 0) + 1 AS BOARD_NO"
				+ " FROM TB_JDBC_BOARD";
		Map<String, Object> boardmap = jdbc.selectOne(sql);
		boardNo = boardmap.get("BOARD_NO");
		return boardNo;
	}//createNo

}//
