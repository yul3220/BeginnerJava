package c_statement;

import java.util.Scanner;

public class RepetitiveStatement {

	public static void main(String[] args) {
		/*
		 * 반복문
		 - for문
		 - while문
		 - do-while문
		 
		 *for문
		 - for(초기화; 조건식; 증강식){}
		 - 포함하고 있는 문장들을 정해진 횟수만큼 반복하게 해주는 문장
		 - 반복횟수가 정확한 경우에 주로 사용한다.
		 - 명확할떄, 범위가 주어졌을떄, 배열과 함께일때 사용
		 */
		
		/*(반복문의 필수 3요소)
		1) 정해진 횟수의 반복을 위해서는 하나의 변수가 필요하다.
		2) 그 변수를 기반으로 하는 조건검사가 필요하다.
		3) 조건검사가 false가 되게 하기 위한 연산이 필요하다.
		*/
		
		Scanner s = new Scanner(System.in);
		
		for(int i=1;i<=10;i++){//i변수는 반복문 안에서만 사용
			//초기화 : 조건식과 증감식에 사용할 변수 초기화
			//조건식 : 연산결과가 true이면 블럭안의 내용을 수행
			//증감식 : 변수를 증가/감소시켜 반복문을 제어
			
			System.out.println(i);
		}
		
	
		int sum = 0;//1부터 10까지 합계를저장
		
		sum+=1;
		sum+=2;
		sum+=3;
		sum+=4;
		sum+=5;
		sum+=6;
		sum+=7;
		sum+=8;
		sum+=9;
		sum+=10;
		System.out.println(sum);
		
		sum = 0;
		for(int i=0;i<=10;i++){
			sum+=i;
		}
		System.out.println(sum);
		
		sum = 0;
		for(int i=1;i<=100;i++){
			sum+=i;
		}
		System.out.println(sum);
		
		
		//1-100까지의 합을 구하기(감소연산자사용)
		sum = 0;
		for(int i=100;i>=1;i--){
			sum+=i;
		}
		System.out.println(sum);
		
		
		//Q.1부터 100까지 짝수의 합을 출력해주세요.
		//1)첫번쨰 방법
		sum=0;
		for(int i=1;i<=100;i++){
			if(i%2==0){
				sum+=i;
			}
		}
		System.out.println(sum);
		
		//2)두번째 방법
		sum=0;
		for(int i=2;i<=100;i+=2){
			sum+=i;
		}
		System.out.println(sum);
		
		//Q2. 1부터 100까지 홀수의 합을 출력해주세요.
		//1)첫번쨰 방법
		sum=0;
		for(int i=1;i<=100;i++)
		{
			if(i%2==1){
				sum+=i;
			}
		}
		System.out.println(sum);
		
		//2)두번째 방법
		sum=0;
		for(int i=1;i<=100;i+=2){
			sum+=i;
		}
		System.out.println(sum);
		
		//구구단
		/* 
		 * 2 * 1 = 2
		 * 2 * 2 = 4
		 * 2 * 3 = 6
		 * .....
		 */
		
		/*for(int i=1;i<=9;i++){
			System.out.println(2+" * "+i +" = " +i*2);
		}
		
		for(int i=1;i<=9;i++){
			System.out.println(8+" * "+i+" = "+i*8);
		}
		
		//2단부터 9단까지 전체 출력하는 코드
		for(int j=2;j<=9;j++){
			for(int i=1;i<=9;i++){
				System.out.println(j +" * "+ i +" = "+ j*i);
			}
		}*/
		
		//구구단 전체를 가로로 출력해주세요.
		/*
		 * 2 * 1 = 2   3 * 1 = 3   4 * 1 = 4
		 * 2 * 2 = 4   3 * 2 = 6   4 * 2 = 8
		 * 2 * 3 = 6   3 * 3 = 9   4 * 3 = 12
		 * 
		 * .......
		 * 
		 * 탭:\t
		 * */
		
		/*for(int j=1;j<=9;j++){
			for(int i=2;i<=9;i++){
				System.out.print(i +" * "+ j +" = "+ i*j +"\t");
			}
			System.out.println();
		}*/
		
		
		
		/*while문
		 - while(조건식){}
		 - 포함하고 있는 문장들을 조건식이 만족하는 동안 반복하는 문장
		 - 반복횟수가 정확하지 않은 경우에 주로 사용한다.
		 - 불분명할떄, 조건을 만족하는동안 계속, 무한하게 일때 사용
		 */
		
		int a=1;
		//a에 2씩 몇번을 곱해야 1000이상이 되는지 알아봅시다.
		int count = 0;
		
		while(a<1000){
			a*=2;
			count++;
			System.out.println(count + " : " + a);
		}
		
		/*
		 * do-while문
		 - do{} while(조건식);
		 - 최소한(무조건) 한번의 수행을 보장한다.
		 - 무언가를 한 후에 반복을 할건지 아닌지를 정한다.
		 */
		
		//숫자 맞추기 게임
		/*int answer = (int)(Math.random()*100)+1;
		int input = 0;
		do{
			System.out.print("1~100사이의 수를 입력해주세요>");
			input = Integer.parseInt(s.nextLine());
			
			if(answer < input){
				System.out.println(input+"보다 작습니다.");
			}else if(answer > input){
				System.out.println(input + "보다 큽니다.");
			}else{System.out.println("정답입니다!!");}
		}while(input != answer);*/
		
		//이름붙은 반복문
		/*outer : for(int i=2;i<=9;i++)
		{
			for(int j=1;j<=9;j++)
			{
				if(j==5)
				{
					//break;//가장 가까운 반복문 하나를 빠져나간다.
					//break outer; //outer라는 이름의 반복문을 빠져나간다.
					//continue; // 가장 가까운 반복문의 현재 반복회차를 빠져나간다. => 5는 건네띄겠다라는 뜻
					continue outer; // outer라는 이름의 현재 반복회차를 빠져나간다. => 밖에 있는 for문을 건네띔
				}
				 System.out.println(i + " * " + j + " = "+ i*j);
			}
			System.out.println();
		}*/
		
		//별찍기(for문 통해서)
		//System.out.println("*****");
		//System.out.println("*****");
		//System.out.println("*****");
		
		/*for(int i=1;i<=3;i++)
		{
			for(int j=1;j<=5;j++)
			{
				System.out.print("*");
			}
			System.out.println("");
		}*/
		
		/*
		System.out.println("*");
		System.out.println("**");
		System.out.println("***");
		System.out.println("****");
		System.out.println("*****");
		*/
		
		for(int i=1;i<=5;i++)
		{
			for(int j=1;j<=i;j++)
			{
				System.out.print("*");
			}
			System.out.println();
		}
		
		/*
		System.out.println("*****");
		System.out.println("****");
		System.out.println("***");
		System.out.println("**");
		System.out.println("*");
		*/
		
		for(int i=1;i<=5;i++)
		{
			for(int j=5;j>=i;j--)
			{
				System.out.print("*");
			}
			System.out.println();
		}
	}
}
